AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-iot-framework-stack

Parameters:
  AppName:
    Default: aws-iot-framework
    Type: String
    Description: Name of the Framework
  AppEnvironment:
    Type: String
    Description: Environment of this stack
  RegisterTopic:
    Type: String
    Description: Topic which is used by an ESP32 to send a inital request to AWS IoT
  Region:
    Default: eu-central-1
    Type: String
    Description: Region of the Lambda
  DynamoDBTable:
    Default: "TopicTable"
    Type: String
    Description: DynamoDB Table Name
  TimestreamTable:
    Default: "measurement_fleet"
    Type: String
    Description: Timestream Table Name

Globals:
  Function:
    Timeout: 5
    Environment:
      Variables:
        LOG_LEVE: DEBUG
    Runtime: python3.9

Resources:
  TimeStreamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "TimestreamAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "timestream:*"
                  - "dynamodb:*"
                  - "s3:*"
                  - "iam:ListRoles"
                  - "ses:*"
                  - "events:*"
                Resource: "*"
        - PolicyName: "CloudWatchAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  RegisterDeviceLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambdas/RegisterDeviceLambda
      Handler: app.lambda_handler
      Description: Lambda which registers a new ESP32 Device at Timestream
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TopicTable
      Environment:
        Variables:
          REGISTER_TOPIC: !Ref RegisterTopic
          REGION: !Ref Region
      Role: !GetAtt TimeStreamRole.Arn
      Events:
        IoT:
          Type: IoTRule
          Properties:
            Sql: "SELECT * FROM 'init'"

  TopicTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DynamoDBTable
      KeySchema:
        - AttributeName: "ESP_MAC"
          KeyType: "HASH"
        - AttributeName: "ESP_ID"
          KeyType: "RANGE"
      AttributeDefinitions:
        - AttributeName: "ESP_MAC"
          AttributeType: "S"
        - AttributeName: "ESP_ID"
          AttributeType: "S"
      TimeToLiveSpecification:
        AttributeName: expiration_ts
        Enabled: true
      BillingMode: PAY_PER_REQUEST

Outputs:
  TopicTable:
    Description: "TopicTable"
    Value: !Ref TopicTable
